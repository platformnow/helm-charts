name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: Azure/setup-helm@v4.3.0
        with:
          version: v3.10.2

      # todo: Move dependency chart adding to chart-testing action using https://github.com/helm/chart-testing#using-private-chart-repositories
      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add jetstack https://charts.jetstack.io
          helm repo add external-secrets https://charts.external-secrets.io

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1
        with:
          cosign-release: 'v2.4.3'
      
      - name: Check cosign installation
        run: cosign version

      - name: Push charts to GHCR and sign
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            # Push the chart and capture both stdout and stderr
            output=$(helm push "${pkg}" oci://ghcr.io/"${GITHUB_REPOSITORY_OWNER}"/charts 2>&1)
            echo "Full output:"
            echo "$output"
            
            # Extract the digest from the specific Digest: line
            digest=$(echo "$output" | grep "Digest: " | sed 's/Digest: //')
            if [ -z "$digest" ]; then
              echo "Failed to extract digest from output"
              exit 1
            fi
            echo "Found digest: $digest"
            
            # Extract chart name and version from the Pushed: line
            ref=$(echo "$output" | grep "Pushed: " | sed 's/Pushed: //')
            if [ -z "$ref" ]; then
              echo "Failed to extract reference from output"
              exit 1
            fi
            echo "Found reference: $ref"
            
            # Convert tag-based reference to digest-based reference
            ref="${ref%:*}@${digest}"
            echo "Signing reference: $ref"
            
            # Sign the chart with keyless signing
            cosign sign --yes --recursive "${ref}"
          done
